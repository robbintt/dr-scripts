=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#locksmithing
=end

custom_require.call(%w[common common-items drinfomon equipmanager])

class Locksmithing
  include DRC
  include DRCI
  def initialize
    settings = get_settings
    @equipment_manager = EquipmentManager.new(settings)
    @daily_trainer = settings.have_training_box
    @box = settings.picking_lockbox
    @worn_lockbox = settings.picking_worn_lockbox
    @box_locked = false
    @liveboxes = settings.pick_live_boxes
    @consumable_trainers = settings.consumable_lockboxes
    @consumable_container = settings.burgle_settings['loot_container']
    @sell_loot = settings.sell_loot
    @safe_room = settings.safe_room
    @equipment_manager.empty_hands

    live_boxes if @liveboxes
    # Practice some music while use lock trainers
    start_script('performance', ['noclean']) unless Script.running?('performance')
    pause 3
    daily_lockbox if @daily_trainer
    consumable_lockbox if @consumable_trainers
  end

  def daily_lockbox
    if DRSkill.getxp('Locksmithing') < 34
      if @worn_lockbox
        case bput("remove my #{@box}", 'You take', 'Remove what', "You aren't wearing that", 'You sling','You remove', 'You detach')
        when 'Remove what', "You aren't wearing that"
          echo('Lockbox is not worn but you declared it is in your yaml, exiting')
          return
        end
        bput("close my #{@box}", 'You close', 'That is already',"You can't close that")
      else
        case bput("get my #{@box}", 'You get a', 'What were')
        when 'What were'
          echo('Daily Trainer not found! Where is it?')
          return
        end
      end

      pick_box(@box)

      if @worn_lockbox
        bput("pick my #{@box}", 'not making any progress', 'it opens.', "isn't locked", 'The lock feels warm')
        bput("wear my #{@box}", 'You put', 'You sling','You attach')
      else
        @equipment_manager.empty_hands
      end
    end
    bput("open my #{@box}", 'You open',"You can't open that", 'It is locked')
  end

  def consumable_lockbox
    consumables = @consumable_trainers
    if DRSkill.getxp('Locksmithing') < 34
      consumables.each do | consumable |
        case bput("get my #{consumable} from my #{@consumable_container}", 'You get', 'What were',"But you aren't holding")
        when /But you aren't holding/
          echo('#{consumable} may not be specific enough - catching interference from another item')
        when /You get/
          @box = consumable
          pick_box(@box)
          bput("put my #{@box} in my #{@consumable_container}", 'You put', 'What were') if DRC.right_hand
        when /What were/
          echo("#{consumable} NOT found!  If you're really out of them, trim or rearrange your yaml to avoid spam.")
        end
      end
    end
    bput("put my #{@box} in my #{@consumable_container}", 'You put', 'What were') if DRC.right_hand
  end

  def live_boxes
    if DRSkill.getxp('Locksmithing') < 34
      start_time = Time.now
      wait_for_script_to_complete('pick')
      if (Time.now - start_time > 15) && @sell_loot
        wait_for_script_to_complete('sell-loot')
        DRCT.walk_to @safe_room
      end
    end
  end

  def pick_box(trainer)
    while (DRSkill.getxp('Locksmithing') < 34 && DRC.right_hand)
      case bput("pick my #{trainer}", 'Maybe you should close', 'not making any progress', "why bother", "it opens.", "isn't locked", 'The lock feels warm', 'The lock looks weak', 'Pick what', 'You need some type of tool to pick', "But you aren't holding")
      when /You need some type of tool to pick/
        echo ('YOU HAVE NO LOCKPICKS ON YOUR LOCKPICK RING/BELT.  SORT THAT OUT!')
        exit
      when /(you should close)|(it opens)|(isn't locked)/
        bput("close my #{trainer}", 'You close', 'already closed', "You can't close that")
        bput("lock my #{trainer}", 'You quickly lock', 'already locked')
      when /The lock feels warm/
        echo('Charges Burned!, checking for other settings.')
        return
      when /The lock looks weak/
        case bput("study my #{trainer}", /0 more times/,/risk breaking the lock/,'Study what')
        when /0 more times/
          bput("drop my #{trainer}", 'You drop')
          consumable_lockbox
        end
      when /But you aren't holding/
          echo("Description: '#{trainer}' may not be specific enough or is in a wrong container - something is interfering.")
          exit
      when /why bother/
        echo ("The #{trainer} is not a valid option but shares a noun - move it out of your burgle bag to avoid hangups.")
        bput('stow', 'You')
        consumable_lockbox
      when /Pick what/
        return
      end
    end
  end

  before_dying do
    kill_script('performance') if running?('performance')
  end
end

Locksmithing.new
