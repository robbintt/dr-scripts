# common contains DRC?
custom_require.call(%w[drinfomon common util_methods])
include UtilMethods # from util_methods

class OutdoorsmanshipTrainer
  # is this needed to get exp or just drinfomon/common?
  #include DRC
  def initialize
    arg_definitions = [
      [
        { name: 'exp_increment', regex: /\d+/, optional: true, description: 'exit after this amount of experience is added to the existing pool' }
      ]
    ]
    args = parse_args(arg_definitions)

    current_exp = 0
    exp_max = 30

    # default to exp_max if arg not provided
    exp_increment = args.exp_increment ? Integer(args.exp_increment) : exp_max
    # remove extra list, set the default in the mapping
    @skillnames = ["Outdoorsmanship"]
    @skill_targets = {}

    @skillnames.each do |current_skill|
      new_target = DRSkill.getxp(current_skill) + exp_increment
      @skill_targets[current_skill] = new_target < exp_max ? new_target : exp_max
    end
  end
  def skill_targets
    @skill_targets
  end
  def collect
    use_tarantula_if_full("Outdoorsmanship")
    pause
    waitrt?
    fput "kick pile", "You take a step back and run up to the pile of rocks.", "I could not find what you were referring to."
    fput "kick pile", "You take a step back and run up to the pile of rocks.", "I could not find what you were referring to."
    pause
    waitrt?
    fput "collect rock", "You move backwards slightly", "You manage to collect a pile of rocks.", "You wander around and poke your fingers", "Mindlessly you begin to forage the area before you.", "You move slightly to the left, hoping to find a better foraging spot.", "With skill and nimble fingers you avoid the centipede that runs along in front of your fingers.", "You begin scanning the area before you, trying to find just the right spot to forage.", "You move slightly to the right, hoping to find a better foraging spot."
  end
end

outdoorstrainer = OutdoorsmanshipTrainer.new

while DRSkill.getxp('Outdoorsmanship') < outdoorstrainer.skill_targets['Outdoorsmanship']
  outdoorstrainer.collect
end
