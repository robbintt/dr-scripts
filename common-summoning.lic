# quiet
=begin
  Documentation: https://elanthipedia.play.net/Lich_script_development#common-summoning
=end

custom_require.call(%w[common common-travel drinfomon])

module DRCS
  module_function

  def summon_weapon(moon = nil, element = nil, ingot = nil, skill = nil)
    if DRStats.moon_mage?
      unless moon
        echo "Couldn't find any moons to cast moonblade with"
        return
      end
      DRCMM.hold_moon_weapon?
    elsif DRStats.warrior_mage?
      get_ingot(ingot, true)
      case DRC.bput("summon weapon #{element} #{skill}", 'You lack the elemental charge', 'you draw out')
      when 'You lack the elemental charge'
        summon_admittance
        summon_weapon(moon, element, nil, skill)
      end
      stow_ingot(ingot)
    else
      echo "Unable to summon weapons as a #{DRStats.guild}"
    end
    pause 1
    waitrt?
    DRC.fix_standing
  end

  def get_ingot(ingot, swap)
    return unless ingot

    DRC.bput("get my #{ingot} ingot", 'You get')
    DRC.bput('swap', 'You move') if swap
  end

  def stow_ingot(ingot)
    return unless ingot

    DRC.bput("stow my #{ingot} ingot", 'You put')
  end

  def break_summoned_weapon(item)
    return if item.nil?

    DRC.bput("break my #{item}", 'Focusing your will', 'disrupting its matrix', "You can't break")
  end

  def shape_summoned_weapon(skill, ingot = nil)
    if DRStats.moon_mage?
      skill_to_shape = { 'Staves' => 'blunt', 'Twohanded Edged' => 'huge', 'Large Edged' => 'heavy', 'Small Edged' => 'normal' }
      shape = skill_to_shape[skill]
      if DRCMM.hold_moon_weapon?
        DRC.bput("shape #{GameObj.right_hand.noun} to #{shape}", 'you adjust the magic that defines its shape', 'already has')
      end
    elsif DRStats.warrior_mage?
      get_ingot(ingot, false)
      case DRC.bput("shape my #{GameObj.right_hand.noun} to #{skill}", 'You lack the elemental charge', 'You reach out')
      when 'You lack the elemental charge'
        summon_admittance
        shape_summoned_weapon(skill, nil)
      end
      stow_ingot(ingot)
    else
      echo "Unable to shape weapons as a #{DRStats.guild}"
    end
    pause 1
    waitrt?
  end

  def moon_used_to_summon_weapon
    # Note, if you have more than one weapon summoned at a time
    # then the results of this method are non-deterministic.
    # For example, if you have 2+ moonblades/staffs cast on different moons.
    ['moonblade', 'moonstaff'].each do |weapon|
      glance = DRC.bput("glance my #{weapon}", "You glance at a .* (black|red-hot|blue-white) moon(blade|staff)", "I could not find")
      case glance
      when /black moon[\w]+/
        return 'katamba'
      when /red-hot moon[\w]+/
        return 'yavash'
      when /blue-white moon[\w]+/
        return 'xibar'
      end
    end
    return nil
  end

  def turn_summoned_weapon
    case DRC.bput("turn my #{GameObj.right_hand.noun}", 'You lack the elemental charge', 'You reach out')
    when 'You lack the elemental charge'
      summon_admittance
      turn_summoned_weapon
    end
    pause 1
    waitrt?
  end

  def push_summoned_weapon
    case DRC.bput("push my #{GameObj.right_hand.noun}", 'You lack the elemental charge', 'Closing your eyes', 'That\'s as')
    when 'You lack the elemental charge'
      summon_admittance
      push_summoned_weapon
    end
    pause 1
    waitrt?
  end

  def pull_summoned_weapon
    case DRC.bput("pull my #{GameObj.right_hand.noun}", 'You lack the elemental charge', 'Closing your eyes', 'That\'s as')
    when 'You lack the elemental charge'
      summon_admittance
      pull_summoned_weapon
    end
    pause 1
    waitrt?
  end

  def summon_admittance
    case DRC.bput('summon admittance', 'You align yourself to it', 'further increasing your proximity', 'Going any further while in this plane would be fatal', 'Summon allows Warrior Mages to draw', 'You are a bit too distracted')
    when 'You are a bit too distracted'
      DRC.retreat
      summon_admittance
    end
    pause 1
    waitrt?
    DRC.fix_standing
  end
end
