# quiet
=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#heal-remedy
=end

custom_require.call(%w[common common-healing common-items])

arg_definitions = [
  [
    { name: 'debug', regex: /debug/i, optional: true },
    { name: 'nohands', regex: /nohands/i, optional: true, description: 'Skip herbs which must be held to use' },
    { name: 'noscars', regex: /noscars/i, optional: true, description: 'Skip scar healing herbs' },
    { name: 'quick', regex: /quick/i, optional: true, description: 'Skip delay between wound and scar herbs' },
    { name: 'level', regex: /\d+/i, optional: true, description: 'Healing level desired.' },
    { name: 'override', regex: /override/i, optional: true, description: 'Override setting' }
  ]
]

args = parse_args(arg_definitions)
$debug_mode_hr = args.debug
$nohands_mode = args.nohands
$noscars_mode = args.noscars
$quick_mode = args.quick
@override_mode = args.override

$heal_level = if args.level
                args.level.to_i
              else
                0
              end

@settings = get_settings
echo @override_mode if $debug_mode_hr
if @settings.herbs && !@override_mode
  $remedies = get_data('herbs')
  echo "herbs" if $debug_mode_hr
elsif @override_mode
  $remedies = get_data('remedies')
  echo "first remedies condition" if $debug_mode_hr
end

#$remedies = get_data('remedies') if @settings.herbs && $override_mode
#$remedies = get_data('herbs') if @settings.herbs && !$override_mode
@wounds_applied = FALSE

def wounds
  wounds = DRCH.check_health['wounds']
  pause 1
  echo wounds if $debug_mode_hr
  hurt = wounds.select { |level, _| level >= $heal_level }.values.flatten.map(&:body_part).map(&:downcase).uniq
  wound_grouping = { 'right arm' => 'limbs', 'left arm' => 'limbs', 'left leg' => 'limbs', 'right leg' => 'limbs', 'right hand' => 'limbs', 'left hand' => 'limbs', 'right eye' => 'eyes', 'left eye' => 'eyes' }
  scar_grouping = { 'right arm' => 'limbs', 'left arm' => 'limbs', 'left leg' => 'limbs', 'right leg' => 'limbs', 'right hand' => 'limbs', 'left hand' => 'limbs', 'head' => 'face', 'neck' => 'face', 'eyes' => 'face', 'chest' => 'body', 'abdomen' => 'body', 'back' => 'body' }
  hurt = hurt.map { |raw| wound_grouping[raw] || raw }.uniq
  scar = hurt.map { |raw| scar_grouping[raw] || raw }.uniq
  if $debug_mode_hr
    echo 'Wounds: '
    hurt.each do |key|
      echo key
    end

    echo

    echo 'Scars: '
    scar.each do |key|
      echo key
    end
  end
  hurt.each do |key|
    echo key if $debug_mode_hr
    echo('In hurt loop') if $debug_mode_hr
    remedy_apply_wounds(key) if !@settings.herbs || @override
    herb_apply_wounds(key) if @settings.herbs && !@override
  end
  return unless @wounds_applied
  pause 180 unless $quick_mode # pause 3 minutes before using scar remedies
  scar.each do |key|
    echo key if $debug_mode_hr
    echo('In scar loop') if $debug_mode_hr
    remedy_apply_scars(key) if !@settings.herbs || @override
    herb_apply_scars(key) if @settings.herbs && !@override
  end
end

def remedy_apply_wounds(key)
  echo("In apply_wounds function for remedies and key is #{key}") if $debug_mode_hr
  rem_wounds = $remedies['remedies']['external'][key]
  echo(rem_wounds) if $debug_mode_hr
  rem_wounds.each do |key|
    loop_debug
    if DRCI.exists?(key)
      DRC.bput("get #{key}", 'You get')
      case key
      when /salve/, /ungent/, /poultices/, /ointment/
        DRC.bput("rub #{key}", 'You')
      when /potion/, /tonic/, /elixir/, /draught/
        DRC.bput("drink #{key}", 'You')
      end
      DRC.bput("stow #{key}", 'You')
    else
      echo("*** No more #{key}! ***")
    end
  end
end

def remedy_apply_scars(key)
  echo("In apply_scar function for remedies and key is #{key}") if $debug_mode_hr
  rem_scars = $remedies['remedies']['scars'][key]
  echo(rem_scars) if $debug_mode_hr
  rem_scars.each do |key|
    loop_debug
    if DRCI.exists?(key)
      DRC.bput("get #{key}", 'You get')
      case key
      when /salve/, /ungent/, /poultices/, /ointment/
        DRC.bput("rub #{key}", 'You')
      when /potion/, /tonic/, /elixir/, /draught/
        DRC.bput("drink #{key}", 'You')
      end
      DRC.bput("stow #{key}", 'You')
    else
      echo("*** No more #{key}! ***")
      echo('Trying general scar remedies.')
      apply_general_scar('general')
    end
  end
end

def remedy_apply_general_scar(key)
  echo("In apply_gerneral_scar function for remedies and key is #{key}") if $debug_mode_hr
  rem_scars_general = $remedies['remedies']['scars'][key]
  echo(rem_scars_general) if $debug_mode_hr
  rem_scars_general.each do |key|
    loop_debug
    if DRCI.exists?(key)
      DRC.bput("get #{key}", 'You get')
      case key
      when /salve/, /ungent/, /poultices/, /ointment/
        DRC.bput("rub #{key}", 'You')
      when /potion/, /tonic/, /elixir/, /draught/
        DRC.bput("drink #{key}", 'You')
      end
      DRC.bput("stow #{key}", 'You')
      @wounds_applied = TRUE
    else
      echo("*** No more #{key}! ***")
    end
  end
end

def herb_apply_wounds(key)
  echo("In apply_wounds function for herbs and key is #{key}") if $debug_mode_hr
  rem_wounds = $remedies['remedies']['external'][key]
  echo(rem_wounds) if $debug_mode_hr
  rem_wounds.each do |key|
    loop_debug
    case key
    when /salve/, /sap/
      DRC.bput("get #{key}", 'You get', 'referring to?') unless $nohands_mode
      DRC.bput("rub my #{key}", 'You', 'Rub what?') unless $nohands_mode
      DRC.bput("stow #{key}", 'You', 'Stow what?') unless $nohands_mode
      @wounds_applied = TRUE
    when /ungent/, /poultices/, /ointment/
      DRC.bput("get #{key}", 'You get', 'referring to?') unless $nohands_mode
      DRC.bput("rub my #{key}", 'You', 'Rub what?')
      DRC.bput("stow #{key}", 'You', 'Stow what?') unless $nohands_mode
      @wounds_applied = TRUE
    when /potion/, /tonic/, /elixir/, /draught/
      DRC.bput("drink my #{key}", 'You', 'Drink what?')
      @wounds_applied = TRUE
    when /flower/, /root/, /leaf/, /grass/
      DRC.bput("eat my #{key}", 'You', 'you referring to?')
      @wounds_applied = TRUE
    end
  end
end

def herb_apply_scars(key)
  echo("In apply_scar function for herbs and key is #{key}") if $debug_mode_hr
  rem_scars = $remedies['remedies']['scars'][key]
  echo(rem_scars) if $debug_mode_hr
  rem_scars.each do |key|
    loop_debug
    case key
    when /genich/
      case DRC.bput("eat my #{key}", "You'd be better off", 'You eat')
      when "You'd be better off"
        DRC.bput("get #{key}", 'You get', 'referring to?') unless $nohands_mode
        DRC.bput("inhale my #{key}", 'You') unless $nohands_mode
        DRC.bput("stow #{key}", 'You', 'Stow what?') unless $nohands_mode
      end
    when /salve/, /ungent/, /poultices/, /ointment/, /sap/
      DRC.bput("rub my #{key}", 'You', 'Rub what?')
    when /tonic/, /draught/, /qun/
      case DRC.bput("drink my #{key}", 'You drink', 'Drink what?',"can't drink")
      when "can't drink"
        DRC.bput("eat my #{key}",'You eat')
      end
    when /flower/, /root/, /leaf/, /grass/, /potion/, /nuloe/, /elixir/, /jadice/, /potion/, /pollen/
      case DRC.bput("eat my #{key}", 'You eat', 'you referring to?','better off trying to drink', 'you should try drinking that?')
      when 'better off trying to drink', 'you should try drinking that?'
        DRC.bput("drink my #{key}",'drink a portion')
      end
    end
  end
end

def loop_debug
  echo('In apply loop') if $debug_mode_hr
end
wounds
